# SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>
#
# SPDX-License-Identifier: GPL-3.0-only

---
- name: Update repositories cache
  become: true
  apt:
    update_cache: true
  when: ansible_os_family == "Debian"
  tags:
    - ugrade-carbonio

- name: Run scripts to get packages to upgrade(Ubuntu)
  become: true
  shell:
    cmd: 'set -o pipefail && apt list --upgradable 2>/dev/null | cut -f 1 -d / | tail -n +2'
    executable: /bin/bash
  register: pkgu
  when: ansible_os_family == "Debian"
  tags:
    - ugrade-carbonio

- name: Run scripts to get packages to upgrade(RedHat)
  become: true
  shell:
    cmd: "set -o pipefail && yum check-update -y 2>/dev/null |  awk '/zextras/ {print $1}'"
    executable: /bin/bash
  register: pkgr
  failed_when: "pkgr.rc not in [ 0, 100 ]"
  when: ansible_os_family == "RedHat"
  tags:
    - ugrade-carbonio

# Check if file with status for restart present . For all VMs
- name: Check if file exist
  stat:
    path: "{{ restart_file }}"
  register: restart_file_status
  tags:
    - track-zmcontrol

# If file with restart status not present will create with content:true. zmcontrol will be restarted with content:true. For all VMs
- name: Create file with default variables if not exist
  copy:
      dest: "{{ restart_file }}"
      content: |
        true
  tags:
    - track-zmcontrol

- name: Debug list packages(Ubuntu)
  when: ansible_os_family == "Debian"
  debug:
    msg: "{{ pkgu }}"

- name: Debug list packages(RedHat)
  when: ansible_os_family == "RedHat"
  debug:
    msg: "{{ pkgr }}"

#carbonio-core version check (Ubuntu)
- block:
    - name: Get list of installed packages (Debian/Ubuntu)
      shell: apt list --installed 2>/dev/null
      register: apt_installed
      changed_when: false
      tags:
        - upgrade-carbonio

    - name: Set fact with carbonio-core version if installed (Debian/Ubuntu)
      set_fact:
        carbonio_core_version: "{{ (apt_installed.stdout | regex_findall('(?m)^carbonio-core/\\S+\\s+(\\S+)'))[0] }}"
      when:
        - (apt_installed.stdout_lines | select('match', '^carbonio-core/') | list) | length > 0
      tags:
        - upgrade-carbonio

  when:
    - ansible_os_family == 'Debian'
    - inventory_hostname in groups['dbsConnectorServers'] or inventory_hostname in groups['applicationServers']

#carbonio-core version check (RHEL/Centos)
- block:
    - name: Get list of installed packages (RHEL/CentOS)
      shell: yum list installed 2>/dev/null
      register: yum_installed
      changed_when: false
      tags:
        - upgrade-carbonio

    - name: Set fact with carbonio-core version if installed (RHEL/CentOS)
      set_fact:
        carbonio_core_version: "{{ (yum_installed.stdout | regex_findall('(?m)^carbonio-core\\.\\S+\\s+(\\S+)'))[0] }}"
      when:
        - (yum_installed.stdout_lines | select('match', '^carbonio-core\\.') | list) | length > 0
      tags:
        - upgrade-carbonio

  when:
    - ansible_os_family in ["RedHat", "CentOS"]
    - inventory_hostname in groups['dbsConnectorServers'] or inventory_hostname in groups['applicationServers']

#Common tasks
- name: Display installed carbonio-core version
  debug:
    msg: "Installed carbonio-core version: {{ carbonio_core_version | default('Package not installed') }}"
  when:
    - inventory_hostname in groups['dbsConnectorServers'] or inventory_hostname in groups['applicationServers']
  tags:
    - upgrade-carbonio

- name: Restart carbonio services if carbonio-core version is less than 4.2.0
  become: true
  become_method: su
  become_user: zextras
  command: '/opt/zextras/bin/zmcontrol restart'
  when:
    - inventory_hostname in groups['dbsConnectorServers'] or inventory_hostname in groups['applicationServers']
    - carbonio_core_version is defined
    - carbonio_core_version is version('4.2', '<')
  tags:
    - upgrade-carbonio

- name: Wait for 20 seconds for restart
  ansible.builtin.pause:
    seconds: 20
  when:
    - inventory_hostname in groups['dbsConnectorServers'] or inventory_hostname in groups['applicationServers']
    - carbonio_core_version is defined
    - carbonio_core_version is version('4.2', '<')
  tags:
    - upgrade-carbonio

- name: Stop carbonio services if carbonio-core version is less than 4.2.0
  become: true
  become_method: su
  become_user: zextras
  command: '/opt/zextras/bin/zmcontrol stop'
  when:
    - inventory_hostname in groups['dbsConnectorServers'] or inventory_hostname in groups['applicationServers']
    - carbonio_core_version is defined
    - carbonio_core_version is version('4.2', '<')
  tags:
    - upgrade-carbonio

- name: Update all packages to their latest version
  ansible.builtin.apt:
    upgrade: full
    #name: "*"
    #state: latest
  when: ansible_os_family == "Debian"

- name: Upgrade RHEL Family OS packages
  become: true
  yum:
    name: "*"
    state: latest
  register: update
  when: ansible_os_family == "RedHat"

- name: Add capability to slapd
  community.general.capabilities:
    path: /opt/zextras/common/libexec/slapd
    capability: cap_net_bind_service=+ep
    state: present
  when: >
    (inventory_hostname in groups["masterDirectoryServers"] or
    inventory_hostname in groups["replicaDirectoryServers"]) and
    (pkgu is search("carbonio-directory-server") or pkgr is search("carbonio-directory-server"))

# Check status of restart file. Only for LDAP master and LDAP replica
- name: Check restart file value
  command: "cat {{ restart_file }}"
  register: restart_zmcontrol_var
  when: >
    (inventory_hostname in groups["masterDirectoryServers"] or
    inventory_hostname in groups["replicaDirectoryServers"])
  tags:
      - track-zmcontrol

- name: Debug restart file
  when: >
    (inventory_hostname in groups["masterDirectoryServers"] or
    inventory_hostname in groups["replicaDirectoryServers"])
  debug:
    msg: "{{ restart_zmcontrol_var.stdout }}"

- name: Restart Directory Server
  become: true
  become_method: su
  become_user: zextras
  command: /opt/zextras/bin/zmcontrol restart
  register: zm_status
  changed_when: zm_status.rc == 0
  when: >
    (inventory_hostname in groups["masterDirectoryServers"] or
    inventory_hostname in groups["replicaDirectoryServers"]) and
    (pkgu is search("carbonio-directory-server") or pkgr is search("carbonio-directory-server"))
  tags:
    - ugrade-carbonio

# set content for restart file to false. Only for LDAP master and LDAP replica
- name: Modify restart file
  copy:
      dest: "{{ restart_file }}"
      content: |
        false
  when: >
    (inventory_hostname in groups["masterDirectoryServers"] or
    inventory_hostname in groups["replicaDirectoryServers"])
  tags:
    - track-zmcontrol