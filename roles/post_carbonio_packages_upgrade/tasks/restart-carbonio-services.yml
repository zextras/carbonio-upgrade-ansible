# SPDX-FileCopyrightText: 2024 Zextras <https://www.zextras.com>
#
# SPDX-License-Identifier: GPL-3.0-only

---
#  1 start ldap, postgres, service-discover server
#  2 start service-discover agent, all sidecars, application server
#  3 start service-discover agent, all sidecars, files/docs
#  4 start service-discover agent, all sidecars, videoserver
#  5 start service-discover agent, all sidecars, proxyServers
#  6 start service-discover agent, all sidecars, mtaServers

- name: Check if patroni is installed (Debian) 24.9 -> 25.6.0
  become: true
  shell: apt list --installed 2>/dev/null | grep -w '^patroni'
  register: patroni_check_debian
  failed_when: false
  changed_when: false 
  when: 
    - inventory_hostname in groups["postgresServers"]
    - ansible_os_family == "Debian"
  tags:
    - restart-carbonio-services
    - postgresServers

- name: Restart postgres(Ubuntu)
  become: true
  ansible.builtin.service:
    name: "postgresql"
    state: restarted
  register: postgres_ubuntu
  when: 
    - inventory_hostname in groups["postgresServers"] 
    - ansible_os_family == "Debian" 
    - "'patroni' not in patroni_check_debian.stdout"
  tags:
    - restart-carbonio-services
    - postgresServers

- name: Restart patroni(Ubuntu)
  become: true
  ansible.builtin.service:
    name: "patroni"
    state: restarted
  register: patroni_ubuntu
  when: 
    - inventory_hostname in groups["postgresServers"] 
    -  ansible_os_family == "Debian"
    - "'patroni' in patroni_check_debian.stdout" 
  tags:
    - restart-carbonio-services
    - postgresServers

- name: Check if patroni is installed [RHEL] 24.9 -> 25.6.0
  become: true
  shell: rpm -qa 2>/dev/null | grep -w '^patroni'
  register: patroni_check_rhel
  failed_when: false 
  changed_when: false
  when: 
    - ansible_os_family == "RedHat" 
    - inventory_hostname in groups["postgresServers"]
  tags:
    - restart-carbonio-services
    - postgresServers

- name: Restart postgres(RHEL)
  become: true
  ansible.builtin.service:
    name: "postgresql-16.service"
    state: restarted
  register: postgres_rhel
  when: 
    - inventory_hostname in groups["postgresServers"] 
    - ansible_os_family == "RedHat"
    - "'patroni' not in patroni_check_rhel.stdout"
  tags:
    - restart-carbonio-services
    - postgresServers

- name: Restart patroni(RHEL)
  become: true
  ansible.builtin.service:
    name: "patroni.service"
    state: restarted
  register: patroni_rhel
  when: 
    - inventory_hostname in groups["postgresServers"] 
    - ansible_os_family == "RedHat"
    - "'patroni' in patroni_check_rhel.stdout"
  tags:
    - restart-carbonio-services
    - postgresServers

- name: Wait for 60 seconds after Patroni restart (Ubuntu)
  ansible.builtin.pause:
    seconds: 60
  when: 
    -  ansible_os_family == "Debian"
    - inventory_hostname in groups["postgresServers"] 
    - "'patroni' in patroni_check_debian.stdout"
  tags:
    - restart-carbonio-services
    - postgresServers

- name: Wait for 60 seconds after Patroni restart (RHEL)
  ansible.builtin.pause:
    seconds: 60
  when: 
    - ansible_os_family == "RedHat" 
    - inventory_hostname in groups["postgresServers"]
    - "'patroni' in patroni_check_rhel.stdout"
  tags:
    - restart-carbonio-services
    - postgresServers

- name: Debug postgres restart status (Ubuntu)
  debug:
    msg: "{{ postgres_ubuntu }}"
  when: 
    - inventory_hostname in groups["postgresServers"]
    -  ansible_os_family == "Debian"
    - "'patroni' not in patroni_check_debian.stdout"
  tags:
    - restart-carbonio-services
    - postgresServers

- name: Debug postgres restart status (RHEL)
  debug:
    msg: "{{ postgres_rhel }}"
  when: 
    - inventory_hostname in groups["postgresServers"]
    - ansible_os_family == "RedHat" 
    - "'patroni' not in patroni_check_rhel.stdout"
  tags:
    - restart-carbonio-services
    - postgresServers

- name: Debug patroni restart status (Ubuntu)
  debug:
    msg: "{{ patroni_ubuntu }}"
  when: 
    - inventory_hostname in groups["postgresServers"] 
    -  ansible_os_family == "Debian"
    - "'patroni' in patroni_check_debian.stdout"
  tags:
    - restart-carbonio-services
    - postgresServers

- name: Debug patroni restart status (RHEL)
  debug:
    msg: "{{ patroni_rhel }}"
  when: 
    - inventory_hostname in groups["postgresServers"] 
    - ansible_os_family == "RedHat" 
    - "'patroni' in patroni_check_rhel.stdout"
  tags:
    - restart-carbonio-services
    - postgresServers
    
- name: Restart Service-discover service
  become: true
  ansible.builtin.service:
    name: service-discover
    state: restarted
  tags:
    - restart-carbonio-services

- name: Fix amavis ipv6
  ansible.builtin.lineinfile:
    path: /opt/zextras/conf/amavisd.conf.in
    insertafter: '# \$inet_socket_port = \[10024,10026\];.*'
    line: "$inet_socket_bind = '127.0.0.1';"
    regexp: \$inet_socket_bind.*
  when: inventory_hostname in groups["mtaServers"]
  tags:
    - amavis

# Check status of restart file. For all VMs except LDAP master and LDAP replica
- name: Check restart file value
  command: "cat {{ restart_file }}"
  register: restart_zmcontrol_var
  when: >
    inventory_hostname not in groups["masterDirectoryServers"] and
    inventory_hostname not in groups["replicaDirectoryServers"]
  tags:
      - track-zmcontrol

- name: Debug restart file
  when: >
    inventory_hostname not in groups["masterDirectoryServers"] and
    inventory_hostname not in groups["replicaDirectoryServers"]
  debug:
    msg: "{{ restart_zmcontrol_var.stdout }}"

- name: Restart zmcontrol
  become: true
  become_method: su
  become_user: zextras
  command: '/opt/zextras/bin/zmcontrol restart'
  when: >
    ansible_distribution_major_version != "9" and 
    ansible_distribution_major_version != "24" and
    inventory_hostname not in groups["masterDirectoryServers"] and
    inventory_hostname not in groups["replicaDirectoryServers"] and
    restart_zmcontrol_var.stdout | bool
  tags:
    - restart-carbonio-services

- name: Restart carbonio services [Sysd]
  become: true
  ansible.builtin.systemd:
    name: carbonio.target
    state: restarted
  when: >
    (ansible_distribution_major_version == "9" or ansible_distribution_major_version == "24") and
    inventory_hostname not in groups["masterDirectoryServers"] and
    inventory_hostname not in groups["replicaDirectoryServers"] and
    restart_zmcontrol_var.stdout | bool
  tags:
    - restart-carbonio-services

    
# set content for restart file to false. For all VMs except LDAP master and LDAP replica
- name: Modify restart file
  when: >
    inventory_hostname not in groups["masterDirectoryServers"] and
    inventory_hostname not in groups["replicaDirectoryServers"]
  copy:
      dest: "{{ restart_file }}"
      content: |
        false
  tags:
    - track-zmcontrol
    
- name: Restart application service
  become: true
  become_method: su
  become_user: zextras
  command: '/opt/zextras/bin/zmmailboxdctl restart'
  when: inventory_hostname in groups["applicationServers"] and ansible_distribution_major_version != "9" and ansible_distribution_major_version != "24"
  register: appserver_status
  changed_when: appserver_status.rc == 0
  tags:
    - restart-carbonio-services
    - applicationServers

- name: Restart application services [Sysd]
  become: true
  ansible.builtin.systemd:
    name: carbonio-appserver.target
    state: restarted
  when: inventory_hostname in groups["applicationServers"] and (ansible_distribution_major_version == "9" or ansible_distribution_major_version == "24")
  tags:
    - restart-carbonio-services
    - applicationServers

- name: Get all carbonio services
  become: true
  shell:
    cmd: "set -o pipefail && systemctl list-unit-files --state=enabled  | awk '/carbonio/ {print $1}'"
    executable: /bin/bash
  register: carbonio_services_in_memory
  changed_when: false
  tags:
    - restart-carbonio-services

- name: Notify restart of all carbonio services on applicationServers
  debug:
    msg: "Trigger handler to restart carbonio files services"
  when: inventory_hostname in groups["applicationServers"] and ansible_distribution_major_version != "9" and ansible_distribution_major_version != "24"
  notify: restart_carbonio_services
  tags:
    - restart-carbonio-services
    - applicationServers

- name: Notify restart of all carbonio services on filesServers
  debug:
    msg: "Trigger handler to restart carbonio files services"
  when: inventory_hostname in groups["filesServers"] and ansible_distribution_major_version != "9" and ansible_distribution_major_version != "24"
  notify: restart_carbonio_services
  tags:
    - restart-carbonio-services
    - filesServers

- name: Notify restart of all carbonio services on docsServers
  debug:
    msg: "Trigger handler to restart carbonio docs services"
  when: inventory_hostname in groups["docsServers"] and ansible_distribution_major_version != "9" and ansible_distribution_major_version != "24"
  notify: restart_carbonio_services
  tags:
    - restart-carbonio-services
    - docsServers

- name: Notify restart of all carbonio services on taskServers
  debug:
    msg: "Trigger handler to restart carbonio tasks services"
  when: inventory_hostname in groups["taskServers"] and ansible_distribution_major_version != "9" and ansible_distribution_major_version != "24"
  notify: restart_carbonio_services
  tags:
    - restart-carbonio-services
    - taskServers

- name: Notify restart of all carbonio services on previewServers
  debug:
    msg: "Trigger handler to restart carbonio preview services"
  when: inventory_hostname in groups["previewServers"] and ansible_distribution_major_version != "9" and ansible_distribution_major_version != "24"
  notify: restart_carbonio_services
  tags:
    - restart-carbonio-services
    - previewServers

- name: Get all videoserver services
  become: true
  shell:
    cmd: "set -o pipefail && systemctl list-unit-files --state=enabled | awk '/video/ {print $1}'"
    executable: /bin/bash
  register: videoserver_services_in_memory
  changed_when: false
  when: inventory_hostname in groups["videoServers"]
  tags:
    - restart-videoserver-services
    - videoServers

- name: Restart carbonio videoservers
  become: true
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
  when: inventory_hostname in groups["videoServers"]
  loop: "{{ videoserver_services_in_memory.stdout_lines }}"
  tags:
    - restart-videoserver-services
    - videoServers

- name: Restart carbonio-message-dispatcher services
  become: true
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
  when: inventory_hostname in groups["workStreamServers"]
  loop:
    - carbonio-message-dispatcher.service
  tags:
    - restart-wsc-services
    - workStreamServers


- name: Collect WSC carbonio services
  become: true
  shell:
    cmd: "set -o pipefail && systemctl list-unit-files --state=enabled | awk '/ws/ {print $1}'"
    executable: /bin/bash
  register: wsc_services_in_memory
  changed_when: false
  when: inventory_hostname in groups["workStreamServers"]
  tags:
    - restart-carbonio-service
    - workStreamServers

- name: Restart carbonio WSC
  become: true
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
  when: inventory_hostname in groups["workStreamServers"]
  loop: "{{ wsc_services_in_memory.stdout_lines }}"
  tags:
    - restart-wsc-services
    - workStreamServers
    
# Remove restart file on all VMs
- name: Remove restart file
  file:
      path: "{{ restart_file }}"
      state: absent
  tags:
    - track-zmcontrol

- name: Restart zmconfigd
  become: true
  ansible.builtin.service:
    name: "carbonio"
    state: restarted  
  when: ansible_os_family in ["RedHat", "CentOS"] and ansible_distribution_major_version != "9"
  tags:
    - restart-carbonio-service